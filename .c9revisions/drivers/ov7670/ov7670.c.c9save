{"ts":1366959504160,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1366959561171,"patch":[[{"diffs":[[1,"int ov7670_init(){\n    if (ov7670_get(REG_PID) != 0x76) {\n\t\tprintf(\" PANIC! REG_PID != 0x76!\\n\");\n\t\twhile (1)\n\t\t\t;\n\t}\n\tov7670_set(REG_COM7, COM7_RESET); /* reset to default values */\n\tov7670_set(REG_CLKRC, 0x01);\n\tov7670_set(REG_COM7, COM7_FMT_VGA | COM7_YUV); /* output format: YUCV */\n\tint hstart = 456, hstop = 24, vstart = 14, vstop = 494;\n\tunsigned char v;\n\tov7670_set(REG_HSTART, (hstart >> 3) & 0xff);\n\tov7670_set(REG_HSTOP, (hstop >> 3) & 0xff);\n\tv = ov7670_get(REG_HREF);\n\tv = (v & 0xc0) | ((hstop & 0x7) << 3) | (hstart & 0x7);\n\tov7670_set(REG_HREF, v);\n\n\tov7670_set(REG_VSTART, (vstart >> 2) & 0xff);\n\tov7670_set(REG_VSTOP, (vstop >> 2) & 0xff);\n\tv = ov7670_get(REG_VREF);\n\tv = (v & 0xf0) | ((vstop & 0x3) << 2) | (vstart & 0x3);\n\tov7670_set(REG_VREF, v);\n\tov7670_set(REG_COM3, COM3_SCALEEN | COM3_DCWEN);\n\tov7670_set(REG_COM14, COM14_DCWEN | 0x01); // divide by 4 [RFC]\n\tov7670_set(0x73, 0xf1);\n\tov7670_set(0xa2, 0x52);\n\tov7670_set(0x7b, 0x1c);\n\tov7670_set(0x7c, 0x28);\n\tov7670_set(0x7d, 0x3c);\n\tov7670_set(0x7f, 0x69);\n\tov7670_set(REG_COM9, 0x38);\n\tov7670_set(0xa1, 0x0b);\n\tov7670_set(0x74, 0x19);\n\tov7670_set(0x9a, 0x80);\n\tov7670_set(0x43, 0x14);\n\tov7670_set(REG_COM13, 0xc0);\n\tov7670_set(0x70, 0x3A);\n\tov7670_set(0x71, 0x35);\n\tov7670_set(0x72, 0x11); // downsample by 2\n\n\t/* Gamma curve values */\n\tov7670_set(0x7a, 0x20);\n\tov7670_set(0x7b, 0x10);\n\tov7670_set(0x7c, 0x1e);\n\tov7670_set(0x7d, 0x35);\n\tov7670_set(0x7e, 0x5a);\n\tov7670_set(0x7f, 0x69);\n\tov7670_set(0x80, 0x76);\n\tov7670_set(0x81, 0x80);\n\tov7670_set(0x82, 0x88);\n\tov7670_set(0x83, 0x8f);\n\tov7670_set(0x84, 0x96);\n\tov7670_set(0x85, 0xa3);\n\tov7670_set(0x86, 0xaf);\n\tov7670_set(0x87, 0xc4);\n\tov7670_set(0x88, 0xd7);\n\tov7670_set(0x89, 0xe8);\n\n\t/* AGC and AEC parameters.  Note we start by disabling those features,\n\t then turn them only after tweaking the values. */\n\tov7670_set(REG_COM8, COM8_FASTAEC | COM8_AECSTEP | COM8_BFILT);\n\tov7670_set(REG_GAIN, 0);\n\tov7670_set(REG_AECH, 0);\n\tov7670_set(REG_COM4, 0x40); /* magic reserved bit */\n\tov7670_set(REG_COM9, 0x18); /* 4x gain + magic rsvd bit */\n\tov7670_set(REG_BD50MAX, 0x05);\n\tov7670_set(REG_BD60MAX, 0x07);\n\tov7670_set(REG_AEW, 0x95);\n\tov7670_set(REG_AEB, 0x33);\n\tov7670_set(REG_VPT, 0xe3);\n\tov7670_set(REG_HAECC1, 0x78);\n\tov7670_set(REG_HAECC2, 0x68);\n\tov7670_set(0xa1, 0x03); /* magic */\n\tov7670_set(REG_HAECC3, 0xd8);\n\tov7670_set(REG_HAECC4, 0xd8);\n\tov7670_set(REG_HAECC5, 0xf0);\n\tov7670_set(REG_HAECC6, 0x90);\n\tov7670_set(REG_HAECC7, 0x94);\n\tov7670_set(REG_COM8,\n\t\t\tCOM8_FASTAEC | COM8_AECSTEP | COM8_BFILT | COM8_AGC | COM8_AEC);\n\n\t/* Almost all of these are magic \"reserved\" values.  */\n\tov7670_set(REG_COM5, 0x61);\n\tov7670_set(REG_COM6, 0x4b);\n\tov7670_set(0x16, 0x02);\n\tov7670_set(REG_MVFP, 0x07);\n\tov7670_set(0x21, 0x02);\n\tov7670_set(0x22, 0x91);\n\tov7670_set(0x29, 0x07);\n\tov7670_set(0x33, 0x0b);\n\tov7670_set(0x35, 0x0b);\n\tov7670_set(0x37, 0x1d);\n\tov7670_set(0x38, 0x71);\n\tov7670_set(0x39, 0x2a);\n\tov7670_set(REG_COM12, 0x78);\n\tov7670_set(0x4d, 0x40);\n\tov7670_set(0x4e, 0x20);\n\tov7670_set(REG_GFIX, 0);\n\tov7670_set(0x6b, 0x4a);\n\tov7670_set(0x74, 0x10);\n\tov7670_set(0x8d, 0x4f);\n\tov7670_set(0x8e, 0);\n\tov7670_set(0x8f, 0);\n\tov7670_set(0x90, 0);\n\tov7670_set(0x91, 0);\n\tov7670_set(0x96, 0);\n\tov7670_set(0x9a, 0);\n\tov7670_set(0xb0, 0x84);\n\tov7670_set(0xb1, 0x0c);\n\tov7670_set(0xb2, 0x0e);\n\tov7670_set(0xb3, 0x82);\n\tov7670_set(0xb8, 0x0a);\n\n\t/* Matrix coefficients */\n\tov7670_set(0x4f, 0x80);\n\tov7670_set(0x50, 0x80);\n\tov7670_set(0x51, 0);\n\tov7670_set(0x52, 0x22);\n\tov7670_set(0x53, 0x5e);\n\tov7670_set(0x54, 0x80);\n\tov7670_set(0x58, 0x9e);\n\n\t/* More reserved magic, some of which tweaks white balance */\n\tov7670_set(0x43, 0x0a);\n\tov7670_set(0x44, 0xf0);\n\tov7670_set(0x45, 0x34);\n\tov7670_set(0x46, 0x58);\n\tov7670_set(0x47, 0x28);\n\tov7670_set(0x48, 0x3a);\n\tov7670_set(0x59, 0x88);\n\tov7670_set(0x5a, 0x88);\n\tov7670_set(0x5b, 0x44);\n\tov7670_set(0x5c, 0x67);\n\tov7670_set(0x5d, 0x49);\n\tov7670_set(0x5e, 0x0e);\n\tov7670_set(0x6c, 0x0a);\n\tov7670_set(0x6d, 0x55);\n\tov7670_set(0x6e, 0x11);\n\tov7670_set(0x6f, 0x9f); /* \"9e for advance AWB\" */\n\tov7670_set(0x6a, 0x40);\n\tov7670_set(REG_BLUE, 0x40);\n\tov7670_set(REG_RED, 0x60);\n\tov7670_set(REG_COM8, COM8_FASTAEC | COM8_AECSTEP | COM8_BFILT | COM8_AGC | COM8_AEC | COM8_AWB);\n}"]],"start1":0,"start2":0,"length1":0,"length2":4240}]],"length":4240,"saved":false}
{"ts":1366959600921,"patch":[[{"diffs":[[0,";\n\t\t"],[-1,"while (1)\n\t\t\t"],[1,"return 1"],[0,";\n\t}"]],"start1":96,"start2":96,"length1":21,"length2":16}]],"length":4235,"saved":false}
{"ts":1366959614759,"patch":[[{"diffs":[[0,"init(){\n"],[1,"    int hstart = 456, hstop = 24, vstart = 14, vstop = 494;\n\tunsigned char v;\n    \n"],[0,"    if ("]],"start1":11,"start2":11,"length1":16,"length2":99},{"diffs":[[0," */\n"],[-1,"\tint hstart = 456, hstop = 24, vstart = 14, vstop = 494;\n\tunsigned char v;"],[0,"\n\tov"]],"start1":361,"start2":361,"length1":82,"length2":8}]],"length":4244,"saved":false}
{"ts":1366959636607,"patch":[[{"diffs":[[0,"EF, v);\n"],[1,"    \n"],[0,"\tov7670_"]],"start1":763,"start2":763,"length1":16,"length2":21}]],"length":4249,"saved":false}
{"ts":1366959648665,"patch":[[{"diffs":[[0,"01);"],[-1," // divide by 4 [RFC]"],[0,"\n\tov"]],"start1":865,"start2":865,"length1":29,"length2":8},{"diffs":[[0,"11);"],[-1," // downsample by 2"],[0,"\n\n\t/"]],"start1":1249,"start2":1249,"length1":27,"length2":8}]],"length":4209,"saved":false}
{"ts":1366959683587,"patch":[[{"diffs":[[1,"uint8_t ov7670_get(uint8_t reg) {\n    uint8_t data = 0;\n\tI2C_start(I2C2, 0x42, I2C_Direction_Transmitter);\n\tI2C_write(I2C2, reg);\n\tI2C_stop(I2C2);\n\tdelay(1000);\n\tI2C_start(I2C2, 0x43, I2C_Direction_Receiver);\n\tdata = I2C_read_nack(I2C2);\n\tI2C_stop(I2C2);\n\tdelay(1000);\n\treturn data;\n}\nuint8_t ov7670_set(uint8_t reg, uint8_t data) {\n\tI2C_start(I2C2, 0x42, I2C_Direction_Transmitter);\n\tI2C_write(I2C2, reg);\n\tI2C_write(I2C2, data);\n\tI2C_stop(I2C2);\n\tdelay(1000);\n\treturn 0;\n}\n\n"],[0,"int ov7670_i"]],"start1":0,"start2":0,"length1":12,"length2":488}]],"length":4685,"saved":false}
{"ts":1366959686127,"patch":[[{"diffs":[[0,"data;\n}\n"],[1,"\n"],[0,"uint8_t "]],"start1":277,"start2":277,"length1":16,"length2":17}]],"length":4686,"saved":false}
{"ts":1366959917175,"patch":[[{"diffs":[[0,") {\n"],[-1,"\t\tprintf(\" PANIC! REG_PID != 0x76!\\n\");\n"],[0,"\t\tre"]],"start1":614,"start2":614,"length1":48,"length2":8}]],"length":4646,"saved":false}
{"ts":1366959926058,"patch":[[{"diffs":[[0,"8_AWB);\n"],[1,"    return 0;\n"],[0,"}"]],"start1":4637,"start2":4637,"length1":9,"length2":23}]],"length":4660,"saved":false}
{"ts":1366959998344,"patch":[[{"diffs":[[1,"\n"],[0,"uint8_t ov7670_get(u"]],"start1":0,"start2":0,"length1":20,"length2":21}]],"length":4661,"saved":false}
